{"version":3,"sources":["components/Weather.js","components/Album.js","components/Playlist.js","components/MainContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Weather","weather","date","getHours","id","src","process","alt","console","log","renderWeather","String","padStart","getMinutes","getSeconds","Album","timeOfDay","width","height","renderMoodImage","Playlist","className","title","frameBorder","allowfullscreen","allow","alert","musicPlayer","MainContainer","getTimeOfDay","hour","animationInDelay","animationIn","animationOut","isVisible","App","useState","weatherSet","Date","dateSet","dt","dtSet","updateDate","curDate","getShiftedDate","origDate","shiftedDate","setHours","useEffect","updateWeather","fetch","then","res","json","result","curWeather","current","main","convertWeather","setInterval","onClick","parseInt","prompt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5564779.chunk.js","sourcesContent":["import React from 'react'\n\nconst Weather = ({ weather, date }) => {\n    const renderWeather = (weather) => {\n        //console.log(weather)\n        switch (weather) {\n            case 'sunny':\n                if (date.getHours() <= 5 || date.getHours() >= 20)\n                    return <img id=\"weather-img\" src={process.env.PUBLIC_URL + '/img/weather/sunny-night.png'} alt={weather} />\n                return <img id=\"weather-img\" src={process.env.PUBLIC_URL + '/img/weather/sunny.png'} alt={weather} />\n            case 'cloudy':\n                return <img id=\"weather-img\" src={process.env.PUBLIC_URL + '/img/weather/cloudy.png'} alt={weather} />\n            case 'rain':\n                return <img id=\"weather-img\" src={process.env.PUBLIC_URL + '/img/weather/rain.gif'} alt={weather} />\n            case 'thunder':\n                return <img id=\"weather-img\" src={process.env.PUBLIC_URL + '/img/weather/thunder.png'} alt={weather} />\n            default:\n                console.log(weather)\n        }\n    }\n    return (\n        <div >\n            {/* <font face=\"Ariel\" color=\"black\">\n                Current Weather\n            </font> */}\n            <div>{renderWeather(weather)}</div>\n            <div id=\"clock\">{date && (String(date.getHours()).padStart(2, '0') + \" : \" + String(date.getMinutes()).padStart(2, '0') + \" : \" + String(date.getSeconds()).padStart(2, '0'))}</div>\n        </div>\n    )\n}\n\nexport default Weather\n","import React from 'react'\nimport ProcessImage from 'react-imgpro';\n\n\nconst Album = ({weather, timeOfDay}) => { \n        const renderMoodImage = (weather, timeOfDay) => {\n            switch (weather) {\n                case 'sunny':\n                    if (timeOfDay == 'morning')\n                        return <img id=\"mood-img\" src={process.env.PUBLIC_URL + '/img/pic/uplifting.jpeg'} alt={weather} />\n                    else if(timeOfDay  == 'afternoon')\n                        return <img id=\"mood-img\" src={process.env.PUBLIC_URL + '/img/pic/alternatives.jpeg'} alt={weather} />\n                    else if(timeOfDay == 'evening')\n                        return <img id=\"mood-img\" src={process.env.PUBLIC_URL + '/img/pic/tiktoksongs.jpeg'} alt={weather} />\n                    else\n                      return <img id=\"mood-img\" src={process.env.PUBLIC_URL + '/img/pic/classical.jpeg'} alt={weather} width=\"600\" height=\"600\"/>\n                case 'cloudy':\n                    if (timeOfDay == 'morning')\n                        return <img id=\"mood-img\" src={process.env.PUBLIC_URL + '/img/weather/calm.jpeg'} alt={weather} />\n                    else if(timeOfDay  == 'afternoon')\n                        return <img id=\"mood-img\" src={process.env.PUBLIC_URL + '/img/weather/study.jpeg'} alt={weather} />\n                    else if(timeOfDay == 'evening')\n                        return <img id=\"mood-img\" src={process.env.PUBLIC_URL + '/img/weather/tiktoksongs.jpeg'} alt={weather} />\n                    else\n                      return <img id=\"mood-img\" src={process.env.PUBLIC_URL + '/img/weather/rnb.jpeg'} alt={weather} />\n                case 'rain':\n                    if (timeOfDay == 'morning')\n                        return <img id=\"mood-img\" src={process.env.PUBLIC_URL + '/img/weather/image-sad.jpeg'} alt={weather} />\n                    else if(timeOfDay  == 'afternoon')\n                        return <img id=\"mood-img\" src={process.env.PUBLIC_URL + '/img/weather/image-blues.jpeg'} alt={weather} />\n                    else if(timeOfDay == 'evening')\n                        return <img id=\"mood-img\" src={process.env.PUBLIC_URL + '/img/weather/hiphops.jpeg'} alt={weather} />\n                    else\n                      return <img id=\"mood-img\" src={process.env.PUBLIC_URL + '/img/weather/rainy.jpeg'} alt={weather} />\n                case 'thunder':\n                    if (timeOfDay == 'morning')\n                        return <img id=\"mood-img\" src={process.env.PUBLIC_URL + '/img/weather/calm.jpeg'} alt={weather} />\n                    else if(timeOfDay  == 'afternoon')\n                        return <img id=\"mood-img\" src={process.env.PUBLIC_URL + '/img/weather/hiphops.jpeg'} alt={weather} />\n                    else if(timeOfDay == 'evening')\n                        return <img id=\"mood-img\" src={process.env.PUBLIC_URL + '/img/weather/heavy.jpeg'} alt={weather} />\n                    else\n                      return <img id=\"mood-img\" src={process.env.PUBLIC_URL + '/img/weather/lofi.jpeg'} alt={weather} />\n                default:\n                    console.log(weather)\n            }\n        }\n        return (\n            <div >\n                {/* <font face=\"Ariel\" color=\"black\">\n                    Current Weather\n                </font> */}\n                <div>{renderMoodImage(weather, timeOfDay)}</div>\n            </div>\n        )\n    }\nexport default Album\n","import React from 'react'\n\n\nconst Playlist = ({ weather, timeOfDay }) => {\n    const musicPlayer = (weather, timeOfDay) => {\n        // return <iframe title=\"Uplifting\" src=\"https://open.spotify.com/embed/playlist/3a8ssl2IKbhSmEzzIPYvbC\" width=\"100%\" height=\"650\" frameBorder=\"0\" allowfullscreen=\"\" allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"></iframe>\n        if (timeOfDay === 'morning') {\n            if (weather === 'sunny' || weather === 'moon')\n                return <iframe title=\"Uplifting\" src=\"https://open.spotify.com/embed/playlist/3a8ssl2IKbhSmEzzIPYvbC\" width=\"100%\" height=\"620\" frameBorder=\"0\" allowfullscreen=\"\" allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"></iframe>\n            else if (weather === 'cloudy')\n                return <iframe title=\"Calm\" src=\"https://open.spotify.com/embed/playlist/0lU86qLkSQVI991j4BUTDF\" width=\"100%\" height=\"620\" frameBorder=\"0\" allowfullscreen=\"\" allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"></iframe>\n            else if (weather === 'rainy')\n                return <iframe title=\"Sad\" src=\"https://open.spotify.com/embed/playlist/44tRfteJJzAmUONSiA56bQ\" width=\"100%\" height=\"620\" frameBorder=\"0\" allowfullscreen=\"\" allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"></iframe>\n            else if (weather === 'thunder')\n                return <iframe title=\"Rock\" src=\"https://open.spotify.com/embed/playlist/0ND34U5LGn1O77FZrxvveu\" width=\"100%\" height=\"620\" frameBorder=\"0\" allowfullscreen=\"\" allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"></iframe>\n        } else if (timeOfDay === 'afternoon') {\n            if (weather === 'sunny')\n                return <iframe title=\"Upbeat\" src=\"https://open.spotify.com/embed/playlist/37i9dQZF1DX4WYpdgoIcn6\" width=\"100%\" height=\"620\" frameBorder=\"0\" allowfullscreen=\"\" allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"></iframe>\n            else if (weather === 'cloudy')\n                return <iframe title=\"Study\" src=\"https://open.spotify.com/embed/playlist/471N195f5jAVs086lzYglw\" width=\"100%\" height=\"620\" frameBorder=\"0\" allowfullscreen=\"\" allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"></iframe>\n            else if (weather === 'rainy')\n                return <iframe title=\"Blues\" src=\"https://open.spotify.com/embed/playlist/4NDZh9ULqIo3GTvdt68xi3\" width=\"100%\" height=\"620\" frameBorder=\"0\" allowfullscreen=\"\" allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"></iframe>\n            else if (weather === 'thunder')\n                return <iframe title=\"Hyperpop\" src=\"https://open.spotify.com/embed/playlist/37i9dQZF1DX7HOk71GPfSw\" width=\"100%\" height=\"620\" frameBorder=\"0\" allowfullscreen=\"\" allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"></iframe>\n        } else if (timeOfDay === 'evening') {\n            if (weather === 'sunny' || weather === 'moon')\n                return <iframe title=\"Alternative\" src=\"https://open.spotify.com/embed/playlist/1CLtZgIOMHYBSfndPzyBOS\" width=\"100%\" height=\"620\" frameBorder=\"0\" allowfullscreen=\"\" allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"></iframe>\n            else if (weather === 'cloudy')\n                return <iframe title=\"Tik-Tok\" src=\"https://open.spotify.com/embed/playlist/6RXgHyqUiEbSmX7NQZ05yQ\" width=\"100%\" height=\"620\" frameBorder=\"0\" allowfullscreen=\"\" allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"></iframe>\n            else if (weather === 'rainy')\n                return <iframe title=\"Hip-Hop\" src=\"https://open.spotify.com/embed/playlist/0FAb3s3yJArWnikZbEOO9p\" width=\"100%\" height=\"620\" frameBorder=\"0\" allowfullscreen=\"\" allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"></iframe>\n            else if (weather === 'thunder')\n                return <iframe title=\"Heavy Metal\" src=\"https://open.spotify.com/embed/album/6FFHZZvoagWTsyp1M80gaR\" width=\"100%\" height=\"620\" frameBorder=\"0\" allowfullscreen=\"\" allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"></iframe>\n        } else if (timeOfDay === 'night') {\n            if ((weather === 'sunny' || weather === 'moon'))\n                return <iframe title=\"Classical\" src=\"https://open.spotify.com/embed/playlist/1h0CEZCm6IbFTbxThn6Xcs\" width=\"100%\" height=\"620\" frameBorder=\"0\" allowfullscreen=\"\" allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"></iframe>\n            else if (weather === 'cloudy')\n                return <iframe title=\"R/B\" src=\"https://open.spotify.com/embed/playlist/37i9dQZF1EQoqCH7BwIYb7\" width=\"100%\" height=\"620\" frameBorder=\"0\" allowfullscreen=\"\" allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"></iframe>\n            else if (weather === 'rainy')\n                return <iframe title=\"Rainy Nights\" src=\"https://open.spotify.com/embed/playlist/4dlYSpSOZjDZizTaiX7Kjy\" width=\"100%\" height=\"620\" frameBorder=\"0\" allowfullscreen=\"\" allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"></iframe>\n            else if (weather === 'thunder')\n                return <iframe title=\"Lofi\" src=\"https://open.spotify.com/embed/playlist/37i9dQZF1DWWQRwui0ExPn\" width=\"100%\" height=\"620\" frameBorder=\"0\" allowfullscreen=\"\" allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"></iframe>\n        } else {\n            alert(\"Error\")\n        }\n    }\n    return (\n        <div className=\"option1\">\n            {musicPlayer(weather, timeOfDay)}\n        </div>\n    );\n}\n\nexport default Playlist\n","import React from 'react'\nimport { Animated } from \"react-animated-css\"\nimport Weather from './Weather';\nimport Album from './Album';\nimport Playlist from './Playlist';\n\nconst MainContainer = ({weather, date}) => {\n    const getTimeOfDay = (hour) => {\n        if (hour <= 5) return 'night'\n        if (hour <= 12) return 'morning'\n        if (hour <= 16) return 'afternoon'\n        if (hour <= 19) return 'evening'\n        else return 'night'\n    }\n\n\n    \n    return (\n        \n        <div className=\"main-container\">\n            <Animated className=\"widget-container\"\n                animationInDelay={300} animationIn=\"zoomIn\" animationOut=\"fadeOut\" isVisible={true}>\n                <Weather weather={weather} date={date} />\n            </Animated>\n            <Animated className=\"widget-container\"\n                animationInDelay={600} animationIn=\"zoomIn\" animationOut=\"fadeOut\" isVisible={true}>\n                <Album weather={weather} timeOfDay={getTimeOfDay(date.getHours())} />\n            </Animated>\n            <Animated className=\"widget-container\"\n                animationInDelay={800} animationIn=\"zoomIn\" animationOut=\"fadeOut\" isVisible={true}>\n                <Playlist weather={weather} timeOfDay={getTimeOfDay(date.getHours())} />\n            </Animated>\n        </div>\n    )\n}\n\nexport default MainContainer\n","import './App.css';\n// Require adding cdn in index.html\nimport { Animated } from \"react-animated-css\"\nimport MainContainer from './components/MainContainer'\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n  const [weather, weatherSet] = useState('')\n  const [date, dateSet] = useState(new Date())\n  const [dt, dtSet] = useState(0)\n  const convertWeather = (weather) => {\n    switch (weather) {\n      case 'Thunderstorm': return 'thunder'\n      case 'Rain': return 'rain'\n      case 'Clear': return 'sunny'\n      default: return 'cloudy'\n    }\n  }\n  const updateDate = () => {\n    let curDate = new Date()\n    dateSet(curDate);\n  }\n  const getShiftedDate = (origDate, dt) => {\n    let shiftedDate = new Date(origDate)\n    shiftedDate.setHours(shiftedDate.getHours() + dt)\n    return shiftedDate\n  }\n  const getTimeOfDay = (date) => {\n    let hour = date.getHours()\n    if (hour <= 5) return 'night'\n    if (hour <= 12) return 'morning'\n    if (hour <= 16) return 'afternoon'\n    if (hour <= 19) return 'evening'\n    else return 'night'\n  }\n\n  useEffect(() => {\n    const updateWeather = () => {\n      let url = \"https://api.openweathermap.org/data/2.5/onecall?lat=33.44&lon=-94.04&exclude=minutely,hourly,daily&appid=e7d52186e0e22ca020dd281f84eaed33\"\n      fetch(url).then(res => res.json()).then((result) => {\n        let curWeather = result.current.weather[0].main\n        weatherSet(convertWeather(curWeather))\n      })\n    }\n    updateWeather()\n    setInterval(updateWeather(), 5000);\n    setInterval(updateDate, 1000);\n  }, [])  //! Important! [] dependency means called only once\n\n  const trickTime = () => {\n    dtSet(parseInt(prompt(\"Enter how many hours you want to deviate\")))\n  }\n  const getTheme = () => {\n    return getTimeOfDay(getShiftedDate(date, dt)) + '-theme'\n  }\n  return (\n    <div className={getTheme()}>\n      <Animated animationIn=\"zoomIn\" animationOut=\"fadeOut\" isVisible={true}>\n        <header className=\"App-header\" onClick={trickTime}>\n          Spotomosphere\n        </header>\n      </Animated>\n      <MainContainer weather={weather} date={getShiftedDate(date, dt)} />\n\n\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}